"""문제
송도에 사는 상근이와 친구들은 송도에서 열리는 펜타포트 락 페스티벌에 가려고 한다. 올해는 맥주를 마시면서 걸어가기로 했다. 출발은 상근이네 집에서 하고, 맥주 한 박스를 들고 출발한다. 맥주 한 박스에는 맥주가 20개 들어있다. 목이 마르면 안되기 때문에 50미터에 한 병씩 마시려고 한다. 즉, 50미터를 가려면 그 직전에 맥주 한 병을 마셔야 한다.

상근이의 집에서 페스티벌이 열리는 곳은 매우 먼 거리이다. 따라서, 맥주를 더 구매해야 할 수도 있다. 미리 인터넷으로 조사를 해보니 다행히도 맥주를 파는 편의점이 있다. 편의점에 들렸을 때, 빈 병은 버리고 새 맥주 병을 살 수 있다. 하지만, 박스에 들어있는 맥주는 20병을 넘을 수 없다. 편의점을 나선 직후에도 50미터를 가기 전에 맥주 한 병을 마셔야 한다.

편의점, 상근이네 집, 펜타포트 락 페스티벌의 좌표가 주어진다. 상근이와 친구들이 행복하게 페스티벌에 도착할 수 있는지 구하는 프로그램을 작성하시오.

입력
첫째 줄에 테스트 케이스의 개수 t가 주어진다. (t ≤ 50)

각 테스트 케이스의 첫째 줄에는 맥주를 파는 편의점의 개수 n이 주어진다. (0 ≤ n ≤ 100).

다음 n+2개 줄에는 상근이네 집, 편의점, 펜타포트 락 페스티벌 좌표가 주어진다. 각 좌표는 두 정수 x와 y로 이루어져 있다. (두 값 모두 미터, -32768 ≤ x, y ≤ 32767)

송도는 직사각형 모양으로 생긴 도시이다. 두 좌표 사이의 거리는 x 좌표의 차이 + y 좌표의 차이 이다. (맨해튼 거리)

출력
각 테스트 케이스에 대해서 상근이와 친구들이 행복하게 페스티벌에 갈 수 있으면 "happy", 중간에 맥주가 바닥나서 더 이동할 수 없으면 "sad"를 출력한다. 

예제 입력 1 
2
2
0 0
1000 0
1000 1000
2000 1000
2
0 0
1000 0
2000 1000
2000 2000
예제 출력 1 
happy
sad"""

# 맥주 개수 / 
from collections import deque

# 거리가 1000m가 넘으면 안된다 -> 편의점을 들릴수 있는가 없는가?
# 편의점이 기준이 되어서 편의점을 거치는것 아닌것을 for문으로 돌려주자

from collections import deque

def bfs():
    q = deque()
    q.append((start_i, start_j))
    
    while q:
        y, x = q.popleft()
        
        # 펜타포트 락 페스티벌까지의 거리가 1000m 이하이면 "happy" 출력 후 종료
        if abs(y - end_i) + abs(x - end_j) <= 1000:
            print("happy")
            return
        
        # 편의점들을 탐색하면서 도착지까지 이동 가능한지 확인
        for i in range(c):
            if not visited[i]:
                ny, nx = stores[i]
                if abs(y - ny) + abs(x - nx) <= 1000:
                    q.append((ny, nx))
                    visited[i] = True
    
    # 도착지에 도달할 수 없을 때 "sad" 출력
    print("sad")
    return            

t = int(input())
for _ in range(t):
    c = int(input())
    start_i, start_j = map(int, input().split())
    stores = []
    for _ in range(c):
        a, b = map(int, input().split())
        stores.append((a, b))
    
    
    end_i, end_j = map(int, input().split())
    
    # 각 편의점을 방문했는지 여부를 나타내는 리스트 초기화
    visited = [0 for i in range(c)]
    
    # BFS 수행
    bfs()
